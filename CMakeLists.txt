# this is the build file for project computer-graphics
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(computer-graphics VERSION 1.0.0 LANGUAGES CXX C)

# target
add_executable(1.2.hello_window_clear "")
set_target_properties(1.2.hello_window_clear PROPERTIES OUTPUT_NAME "1.2.hello_window_clear")
set_target_properties(1.2.hello_window_clear PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(1.2.hello_window_clear ht imgui)
target_include_directories(1.2.hello_window_clear PRIVATE
    include
)
target_include_directories(1.2.hello_window_clear SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glm/0.9.9+8/8335bab7c0314ab9921440de58961aac/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include/stb
    C:/Users/yaojie/AppData/Local/.xmake/packages/f/fmt/10.1.1/adc308aa1dfc472ab92a30abb14e2d6f/include
)
target_compile_definitions(1.2.hello_window_clear PRIVATE
    STB_IMAGE_IMPLEMENTATION
    GLFW_INCLUDE_NONE
)
target_compile_options(1.2.hello_window_clear PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(1.2.hello_window_clear PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(1.2.hello_window_clear PRIVATE -fcxx-exceptions)
else()
    target_compile_options(1.2.hello_window_clear PRIVATE -fexceptions)
endif()
set_target_properties(1.2.hello_window_clear PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(1.2.hello_window_clear PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(1.2.hello_window_clear PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(1.2.hello_window_clear PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(1.2.hello_window_clear PRIVATE -Zi)
else()
    target_compile_options(1.2.hello_window_clear PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET 1.2.hello_window_clear PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(1.2.hello_window_clear PRIVATE
    opengl32
    glfw3
    glad
    assimp-vc143-mt
    minizip
    zlib
    fmt
    ht
    imgui
    user32
    shell32
    gdi32
    advapi32
)
target_link_directories(1.2.hello_window_clear PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/f/fmt/10.1.1/adc308aa1dfc472ab92a30abb14e2d6f/lib
    build/windows/x64/debug
)
target_sources(1.2.hello_window_clear PRIVATE
    examples/learnopengl/chapter1/1.2.hello_window_clear/main.cpp
)

# target
add_library(ht STATIC "")
set_target_properties(ht PROPERTIES OUTPUT_NAME "ht")
set_target_properties(ht PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(ht PRIVATE
    include
)
target_include_directories(ht SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glm/0.9.9+8/8335bab7c0314ab9921440de58961aac/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include/stb
)
target_compile_definitions(ht PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(ht PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(ht PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(ht PRIVATE -fcxx-exceptions)
else()
    target_compile_options(ht PRIVATE -fexceptions)
endif()
set_target_properties(ht PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ht PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(ht PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(ht PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(ht PRIVATE -Zi)
else()
    target_compile_options(ht PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET ht PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ht PRIVATE
    glad
    assimp-vc143-mt
    minizip
    zlib
    advapi32
)
target_link_directories(ht PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/lib
)
target_sources(ht PRIVATE
    ht/src/camera/camera.cpp
    ht/src/exception/exception.cpp
    ht/src/model/mesh.cpp
    ht/src/model/model.cpp
    ht/src/shader/shader.cpp
)

# target
add_library(imgui STATIC "")
set_target_properties(imgui PROPERTIES OUTPUT_NAME "imgui")
set_target_properties(imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(imgui PRIVATE
    include
)
target_include_directories(imgui SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/include
)
target_compile_definitions(imgui PRIVATE
    STB_IMAGE_IMPLEMENTATION
    GLFW_INCLUDE_NONE
)
target_compile_options(imgui PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(imgui PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(imgui PRIVATE -fcxx-exceptions)
else()
    target_compile_options(imgui PRIVATE -fexceptions)
endif()
set_target_properties(imgui PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(imgui PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(imgui PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(imgui PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(imgui PRIVATE -Zi)
else()
    target_compile_options(imgui PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET imgui PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(imgui PRIVATE
    glfw3
    opengl32
    glad
    user32
    shell32
    gdi32
)
target_link_directories(imgui PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/lib
)
target_sources(imgui PRIVATE
    extern/imgui/imgui.cpp
    extern/imgui/imgui_demo.cpp
    extern/imgui/imgui_draw.cpp
    extern/imgui/imgui_impl_glfw.cpp
    extern/imgui/imgui_impl_opengl3.cpp
    extern/imgui/imgui_tables.cpp
    extern/imgui/imgui_widgets.cpp
)

# target
add_executable(test_box2d_main "")
set_target_properties(test_box2d_main PROPERTIES OUTPUT_NAME "test_box2d_main")
set_target_properties(test_box2d_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_box2d_main PRIVATE
    include
)
target_include_directories(test_box2d_main SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/b/box2d/2.4.1/05cc028aef754f309a8d88e0f59daae5/include
)
target_compile_definitions(test_box2d_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_box2d_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_box2d_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_box2d_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_box2d_main PRIVATE -fexceptions)
endif()
set_target_properties(test_box2d_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_box2d_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_box2d_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_box2d_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_box2d_main PRIVATE -Zi)
else()
    target_compile_options(test_box2d_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_box2d_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_box2d_main PRIVATE
    box2d
)
target_link_directories(test_box2d_main PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/b/box2d/2.4.1/05cc028aef754f309a8d88e0f59daae5/lib
)
target_sources(test_box2d_main PRIVATE
    test/test_box2d/main.cpp
)

# target
add_executable(test_catch2_main "")
set_target_properties(test_catch2_main PROPERTIES OUTPUT_NAME "test_catch2_main")
set_target_properties(test_catch2_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_catch2_main PRIVATE
    include
)
target_include_directories(test_catch2_main SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/c/catch2/v3.5.0/913610e4134047fe96551f8e3af6ea88/include
)
target_compile_definitions(test_catch2_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_catch2_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_catch2_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_catch2_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_catch2_main PRIVATE -fexceptions)
endif()
set_target_properties(test_catch2_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_catch2_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_catch2_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_catch2_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_catch2_main PRIVATE -Zi)
else()
    target_compile_options(test_catch2_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_catch2_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_catch2_main PRIVATE
    Catch2Main
    Catch2
)
target_link_directories(test_catch2_main PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/c/catch2/v3.5.0/913610e4134047fe96551f8e3af6ea88/lib
)
target_link_options(test_catch2_main PRIVATE
    -subsystem:console
)
target_sources(test_catch2_main PRIVATE
    test/test_catch2/main.cpp
)

# target
add_executable(test_fast_io_0000.compile_compile "")
set_target_properties(test_fast_io_0000.compile_compile PROPERTIES OUTPUT_NAME "test_fast_io_0000.compile_compile")
set_target_properties(test_fast_io_0000.compile_compile PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0000.compile_compile PRIVATE
    include
)
target_include_directories(test_fast_io_0000.compile_compile SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0000.compile_compile PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0000.compile_compile PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0000.compile_compile PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0000.compile_compile PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0000.compile_compile PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0000.compile_compile PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0000.compile_compile PRIVATE
    test/test_fast_io/0000.compile/compile.cc
)

# target
add_executable(test_fast_io_0000.compile_compile_hosted "")
set_target_properties(test_fast_io_0000.compile_compile_hosted PROPERTIES OUTPUT_NAME "test_fast_io_0000.compile_compile_hosted")
set_target_properties(test_fast_io_0000.compile_compile_hosted PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0000.compile_compile_hosted PRIVATE
    include
)
target_include_directories(test_fast_io_0000.compile_compile_hosted SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0000.compile_compile_hosted PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0000.compile_compile_hosted PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0000.compile_compile_hosted PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0000.compile_compile_hosted PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0000.compile_compile_hosted PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0000.compile_compile_hosted PRIVATE
    test/test_fast_io/0000.compile/compile_hosted.cc
)

# target
add_executable(test_fast_io_0001.helloworld_helloworld "")
set_target_properties(test_fast_io_0001.helloworld_helloworld PROPERTIES OUTPUT_NAME "test_fast_io_0001.helloworld_helloworld")
set_target_properties(test_fast_io_0001.helloworld_helloworld PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0001.helloworld_helloworld PRIVATE
    include
)
target_include_directories(test_fast_io_0001.helloworld_helloworld SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0001.helloworld_helloworld PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0001.helloworld_helloworld PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0001.helloworld_helloworld PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0001.helloworld_helloworld PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0001.helloworld_helloworld PRIVATE
    test/test_fast_io/0001.helloworld/helloworld.cc
)

# target
add_executable(test_fast_io_0001.helloworld_helloworld_box "")
set_target_properties(test_fast_io_0001.helloworld_helloworld_box PROPERTIES OUTPUT_NAME "test_fast_io_0001.helloworld_helloworld_box")
set_target_properties(test_fast_io_0001.helloworld_helloworld_box PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0001.helloworld_helloworld_box PRIVATE
    include
)
target_include_directories(test_fast_io_0001.helloworld_helloworld_box SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0001.helloworld_helloworld_box PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0001.helloworld_helloworld_box PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0001.helloworld_helloworld_box PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_box PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0001.helloworld_helloworld_box PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0001.helloworld_helloworld_box PRIVATE
    test/test_fast_io/0001.helloworld/helloworld_box.cc
)

# target
add_executable(test_fast_io_0001.helloworld_helloworld_dbg "")
set_target_properties(test_fast_io_0001.helloworld_helloworld_dbg PROPERTIES OUTPUT_NAME "test_fast_io_0001.helloworld_helloworld_dbg")
set_target_properties(test_fast_io_0001.helloworld_helloworld_dbg PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE
    include
)
target_include_directories(test_fast_io_0001.helloworld_helloworld_dbg SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0001.helloworld_helloworld_dbg PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0001.helloworld_helloworld_dbg PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0001.helloworld_helloworld_dbg PRIVATE
    test/test_fast_io/0001.helloworld/helloworld_dbg.cc
)

# target
add_executable(test_fast_io_0001.helloworld_helloworld_out "")
set_target_properties(test_fast_io_0001.helloworld_helloworld_out PROPERTIES OUTPUT_NAME "test_fast_io_0001.helloworld_helloworld_out")
set_target_properties(test_fast_io_0001.helloworld_helloworld_out PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0001.helloworld_helloworld_out PRIVATE
    include
)
target_include_directories(test_fast_io_0001.helloworld_helloworld_out SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0001.helloworld_helloworld_out PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0001.helloworld_helloworld_out PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0001.helloworld_helloworld_out PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0001.helloworld_helloworld_out PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0001.helloworld_helloworld_out PRIVATE
    test/test_fast_io/0001.helloworld/helloworld_out.cc
)

# target
add_executable(test_fast_io_0001.helloworld_helloworld_out_buf_mutex "")
set_target_properties(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PROPERTIES OUTPUT_NAME "test_fast_io_0001.helloworld_helloworld_out_buf_mutex")
set_target_properties(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE
    include
)
target_include_directories(test_fast_io_0001.helloworld_helloworld_out_buf_mutex SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0001.helloworld_helloworld_out_buf_mutex PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0001.helloworld_helloworld_out_buf_mutex PRIVATE
    test/test_fast_io/0001.helloworld/helloworld_out_buf_mutex.cc
)

# target
add_executable(test_fast_io_0002.a+b_a+b "")
set_target_properties(test_fast_io_0002.a+b_a+b PROPERTIES OUTPUT_NAME "test_fast_io_0002.a+b_a+b")
set_target_properties(test_fast_io_0002.a+b_a+b PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0002.a+b_a+b PRIVATE
    include
)
target_include_directories(test_fast_io_0002.a+b_a+b SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0002.a+b_a+b PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0002.a+b_a+b PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0002.a+b_a+b PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0002.a+b_a+b PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0002.a+b_a+b PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0002.a+b_a+b PRIVATE
    test/test_fast_io/0002.a+b/a+b.cc
)

# target
add_executable(test_fast_io_0002.a+b_base36_a+b "")
set_target_properties(test_fast_io_0002.a+b_base36_a+b PROPERTIES OUTPUT_NAME "test_fast_io_0002.a+b_base36_a+b")
set_target_properties(test_fast_io_0002.a+b_base36_a+b PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0002.a+b_base36_a+b PRIVATE
    include
)
target_include_directories(test_fast_io_0002.a+b_base36_a+b SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0002.a+b_base36_a+b PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0002.a+b_base36_a+b PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0002.a+b_base36_a+b PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0002.a+b_base36_a+b PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0002.a+b_base36_a+b PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0002.a+b_base36_a+b PRIVATE
    test/test_fast_io/0002.a+b/base36_a+b.cc
)

# target
add_executable(test_fast_io_0002.a+b_hex_a+b "")
set_target_properties(test_fast_io_0002.a+b_hex_a+b PROPERTIES OUTPUT_NAME "test_fast_io_0002.a+b_hex_a+b")
set_target_properties(test_fast_io_0002.a+b_hex_a+b PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0002.a+b_hex_a+b PRIVATE
    include
)
target_include_directories(test_fast_io_0002.a+b_hex_a+b SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0002.a+b_hex_a+b PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0002.a+b_hex_a+b PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0002.a+b_hex_a+b PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0002.a+b_hex_a+b PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0002.a+b_hex_a+b PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0002.a+b_hex_a+b PRIVATE
    test/test_fast_io/0002.a+b/hex_a+b.cc
)

# target
add_executable(test_fast_io_0003.manipulators_0x2a "")
set_target_properties(test_fast_io_0003.manipulators_0x2a PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_0x2a")
set_target_properties(test_fast_io_0003.manipulators_0x2a PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_0x2a PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_0x2a SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_0x2a PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_0x2a PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_0x2a PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_0x2a PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_0x2a PRIVATE
    test/test_fast_io/0003.manipulators/0x2a.cc
)

# target
add_executable(test_fast_io_0003.manipulators_0x2a_0x "")
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_0x2a_0x")
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_0x2a_0x PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_0x2a_0x SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_0x2a_0x PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_0x2a_0x PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_0x2a_0x PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_0x2a_0x PRIVATE
    test/test_fast_io/0003.manipulators/0x2a_0x.cc
)

# target
add_executable(test_fast_io_0003.manipulators_0x2a_0x_imbue "")
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x_imbue PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_0x2a_0x_imbue")
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x_imbue PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_0x2a_0x_imbue SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x_imbue PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_0x2a_0x_imbue PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_0x2a_0x_imbue PRIVATE
    test/test_fast_io/0003.manipulators/0x2a_0x_imbue.cc
)

# target
add_executable(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout "")
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout")
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_0x2a_0x_imbue_for_fout PRIVATE
    test/test_fast_io/0003.manipulators/0x2a_0x_imbue_for_fout.cc
)

# target
add_executable(test_fast_io_0003.manipulators_0x2a_custom "")
set_target_properties(test_fast_io_0003.manipulators_0x2a_custom PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_0x2a_custom")
set_target_properties(test_fast_io_0003.manipulators_0x2a_custom PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_0x2a_custom PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_0x2a_custom SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_0x2a_custom PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_0x2a_custom PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_0x2a_custom PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_0x2a_custom PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_0x2a_custom PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_0x2a_custom PRIVATE
    test/test_fast_io/0003.manipulators/0x2a_custom.cc
)

# target
add_executable(test_fast_io_0003.manipulators_boolalpha "")
set_target_properties(test_fast_io_0003.manipulators_boolalpha PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_boolalpha")
set_target_properties(test_fast_io_0003.manipulators_boolalpha PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_boolalpha PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_boolalpha SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_boolalpha PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_boolalpha PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_boolalpha PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_boolalpha PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_boolalpha PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_boolalpha PRIVATE
    test/test_fast_io/0003.manipulators/boolalpha.cc
)

# target
add_executable(test_fast_io_0003.manipulators_chvw "")
set_target_properties(test_fast_io_0003.manipulators_chvw PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_chvw")
set_target_properties(test_fast_io_0003.manipulators_chvw PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_chvw PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_chvw SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_chvw PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_chvw PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_chvw PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_chvw PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_chvw PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_chvw PRIVATE
    test/test_fast_io/0003.manipulators/chvw.cc
)

# target
add_executable(test_fast_io_0003.manipulators_cond "")
set_target_properties(test_fast_io_0003.manipulators_cond PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_cond")
set_target_properties(test_fast_io_0003.manipulators_cond PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_cond PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_cond SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_cond PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_cond PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_cond PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_cond PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_cond PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_cond PRIVATE
    test/test_fast_io/0003.manipulators/cond.cc
)

# target
add_executable(test_fast_io_0003.manipulators_pointer "")
set_target_properties(test_fast_io_0003.manipulators_pointer PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_pointer")
set_target_properties(test_fast_io_0003.manipulators_pointer PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_pointer PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_pointer SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_pointer PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_pointer PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_pointer PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_pointer PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_pointer PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_pointer PRIVATE
    test/test_fast_io/0003.manipulators/pointer.cc
)

# target
add_executable(test_fast_io_0003.manipulators_rgvw "")
set_target_properties(test_fast_io_0003.manipulators_rgvw PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_rgvw")
set_target_properties(test_fast_io_0003.manipulators_rgvw PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_rgvw PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_rgvw SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_rgvw PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_rgvw PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_rgvw PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_rgvw PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_rgvw PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_rgvw PRIVATE
    test/test_fast_io/0003.manipulators/rgvw.cc
)

# target
add_executable(test_fast_io_0003.manipulators_width "")
set_target_properties(test_fast_io_0003.manipulators_width PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_width")
set_target_properties(test_fast_io_0003.manipulators_width PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_width PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_width SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_width PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_width PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_width PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_width PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_width PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_width PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_width PRIVATE
    test/test_fast_io/0003.manipulators/width.cc
)

# target
add_executable(test_fast_io_0003.manipulators_width_runtime "")
set_target_properties(test_fast_io_0003.manipulators_width_runtime PROPERTIES OUTPUT_NAME "test_fast_io_0003.manipulators_width_runtime")
set_target_properties(test_fast_io_0003.manipulators_width_runtime PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0003.manipulators_width_runtime PRIVATE
    include
)
target_include_directories(test_fast_io_0003.manipulators_width_runtime SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0003.manipulators_width_runtime PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0003.manipulators_width_runtime PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0003.manipulators_width_runtime PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0003.manipulators_width_runtime PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0003.manipulators_width_runtime PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0003.manipulators_width_runtime PRIVATE
    test/test_fast_io/0003.manipulators/width_runtime.cc
)

# target
add_executable(test_fast_io_0004.time_posix_clock_gettime "")
set_target_properties(test_fast_io_0004.time_posix_clock_gettime PROPERTIES OUTPUT_NAME "test_fast_io_0004.time_posix_clock_gettime")
set_target_properties(test_fast_io_0004.time_posix_clock_gettime PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0004.time_posix_clock_gettime PRIVATE
    include
)
target_include_directories(test_fast_io_0004.time_posix_clock_gettime SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0004.time_posix_clock_gettime PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0004.time_posix_clock_gettime PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0004.time_posix_clock_gettime PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0004.time_posix_clock_gettime PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0004.time_posix_clock_gettime PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0004.time_posix_clock_gettime PRIVATE
    test/test_fast_io/0004.time/posix_clock_gettime.cc
)

# target
add_executable(test_fast_io_0004.time_timezone "")
set_target_properties(test_fast_io_0004.time_timezone PROPERTIES OUTPUT_NAME "test_fast_io_0004.time_timezone")
set_target_properties(test_fast_io_0004.time_timezone PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0004.time_timezone PRIVATE
    include
)
target_include_directories(test_fast_io_0004.time_timezone SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0004.time_timezone PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0004.time_timezone PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0004.time_timezone PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0004.time_timezone PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0004.time_timezone PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0004.time_timezone PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0004.time_timezone PRIVATE
    test/test_fast_io/0004.time/timezone.cc
)

# target
add_executable(test_fast_io_0005.sha_compile_time "")
set_target_properties(test_fast_io_0005.sha_compile_time PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_compile_time")
set_target_properties(test_fast_io_0005.sha_compile_time PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_compile_time PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_compile_time SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_compile_time PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_compile_time PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_compile_time PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_compile_time PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_compile_time PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_compile_time PRIVATE
    test/test_fast_io/0005.sha/compile_time.cc
)

# target
add_executable(test_fast_io_0005.sha_crc32 "")
set_target_properties(test_fast_io_0005.sha_crc32 PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_crc32")
set_target_properties(test_fast_io_0005.sha_crc32 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_crc32 PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_crc32 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_crc32 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_crc32 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_crc32 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_crc32 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_crc32 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_crc32 PRIVATE
    test/test_fast_io/0005.sha/crc32.cc
)

# target
add_executable(test_fast_io_0005.sha_md5 "")
set_target_properties(test_fast_io_0005.sha_md5 PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_md5")
set_target_properties(test_fast_io_0005.sha_md5 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_md5 PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_md5 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_md5 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_md5 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_md5 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_md5 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_md5 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_md5 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_md5 PRIVATE
    test/test_fast_io/0005.sha/md5.cc
)

# target
add_executable(test_fast_io_0005.sha_native_hash_file "")
set_target_properties(test_fast_io_0005.sha_native_hash_file PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_native_hash_file")
set_target_properties(test_fast_io_0005.sha_native_hash_file PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_native_hash_file PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_native_hash_file SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_native_hash_file PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_native_hash_file PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_native_hash_file PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_native_hash_file PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_native_hash_file PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_native_hash_file PRIVATE
    test/test_fast_io/0005.sha/native_hash_file.cc
)

# target
add_executable(test_fast_io_0005.sha_sha1 "")
set_target_properties(test_fast_io_0005.sha_sha1 PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_sha1")
set_target_properties(test_fast_io_0005.sha_sha1 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_sha1 PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_sha1 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_sha1 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_sha1 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_sha1 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_sha1 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_sha1 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_sha1 PRIVATE
    test/test_fast_io/0005.sha/sha1.cc
)

# target
add_executable(test_fast_io_0005.sha_sha256 "")
set_target_properties(test_fast_io_0005.sha_sha256 PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_sha256")
set_target_properties(test_fast_io_0005.sha_sha256 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_sha256 PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_sha256 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_sha256 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_sha256 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_sha256 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_sha256 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_sha256 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_sha256 PRIVATE
    test/test_fast_io/0005.sha/sha256.cc
)

# target
add_executable(test_fast_io_0005.sha_sha512 "")
set_target_properties(test_fast_io_0005.sha_sha512 PROPERTIES OUTPUT_NAME "test_fast_io_0005.sha_sha512")
set_target_properties(test_fast_io_0005.sha_sha512 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0005.sha_sha512 PRIVATE
    include
)
target_include_directories(test_fast_io_0005.sha_sha512 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0005.sha_sha512 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0005.sha_sha512 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0005.sha_sha512 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0005.sha_sha512 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0005.sha_sha512 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0005.sha_sha512 PRIVATE
    test/test_fast_io/0005.sha/sha512.cc
)

# target
add_executable(test_fast_io_0006.file_io_count_all_spaces_in_file "")
set_target_properties(test_fast_io_0006.file_io_count_all_spaces_in_file PROPERTIES OUTPUT_NAME "test_fast_io_0006.file_io_count_all_spaces_in_file")
set_target_properties(test_fast_io_0006.file_io_count_all_spaces_in_file PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE
    include
)
target_include_directories(test_fast_io_0006.file_io_count_all_spaces_in_file SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0006.file_io_count_all_spaces_in_file PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0006.file_io_count_all_spaces_in_file PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0006.file_io_count_all_spaces_in_file PRIVATE
    test/test_fast_io/0006.file_io/count_all_spaces_in_file.cc
)

# target
add_executable(test_fast_io_0006.file_io_file_loader "")
set_target_properties(test_fast_io_0006.file_io_file_loader PROPERTIES OUTPUT_NAME "test_fast_io_0006.file_io_file_loader")
set_target_properties(test_fast_io_0006.file_io_file_loader PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0006.file_io_file_loader PRIVATE
    include
)
target_include_directories(test_fast_io_0006.file_io_file_loader SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0006.file_io_file_loader PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0006.file_io_file_loader PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0006.file_io_file_loader PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0006.file_io_file_loader PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0006.file_io_file_loader PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0006.file_io_file_loader PRIVATE
    test/test_fast_io/0006.file_io/file_loader.cc
)

# target
add_executable(test_fast_io_0006.file_io_file_loader_extra "")
set_target_properties(test_fast_io_0006.file_io_file_loader_extra PROPERTIES OUTPUT_NAME "test_fast_io_0006.file_io_file_loader_extra")
set_target_properties(test_fast_io_0006.file_io_file_loader_extra PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0006.file_io_file_loader_extra PRIVATE
    include
)
target_include_directories(test_fast_io_0006.file_io_file_loader_extra SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0006.file_io_file_loader_extra PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0006.file_io_file_loader_extra PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0006.file_io_file_loader_extra PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0006.file_io_file_loader_extra PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0006.file_io_file_loader_extra PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0006.file_io_file_loader_extra PRIVATE
    test/test_fast_io/0006.file_io/file_loader_extra.cc
)

# target
add_executable(test_fast_io_0006.file_io_ibuf_file "")
set_target_properties(test_fast_io_0006.file_io_ibuf_file PROPERTIES OUTPUT_NAME "test_fast_io_0006.file_io_ibuf_file")
set_target_properties(test_fast_io_0006.file_io_ibuf_file PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0006.file_io_ibuf_file PRIVATE
    include
)
target_include_directories(test_fast_io_0006.file_io_ibuf_file SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0006.file_io_ibuf_file PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0006.file_io_ibuf_file PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0006.file_io_ibuf_file PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0006.file_io_ibuf_file PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0006.file_io_ibuf_file PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0006.file_io_ibuf_file PRIVATE
    test/test_fast_io/0006.file_io/ibuf_file.cc
)

# target
add_executable(test_fast_io_0006.file_io_utf8_to_utf16 "")
set_target_properties(test_fast_io_0006.file_io_utf8_to_utf16 PROPERTIES OUTPUT_NAME "test_fast_io_0006.file_io_utf8_to_utf16")
set_target_properties(test_fast_io_0006.file_io_utf8_to_utf16 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE
    include
)
target_include_directories(test_fast_io_0006.file_io_utf8_to_utf16 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0006.file_io_utf8_to_utf16 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0006.file_io_utf8_to_utf16 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0006.file_io_utf8_to_utf16 PRIVATE
    test/test_fast_io/0006.file_io/utf8_to_utf16.cc
)

# target
add_executable(test_fast_io_0007.legacy_c_file "")
set_target_properties(test_fast_io_0007.legacy_c_file PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_c_file")
set_target_properties(test_fast_io_0007.legacy_c_file PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_c_file PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_c_file SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_c_file PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_c_file PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_c_file PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_c_file PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_c_file PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_c_file PRIVATE
    test/test_fast_io/0007.legacy/c_file.cc
)

# target
add_executable(test_fast_io_0007.legacy_construct_fp_from_syscall "")
set_target_properties(test_fast_io_0007.legacy_construct_fp_from_syscall PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_construct_fp_from_syscall")
set_target_properties(test_fast_io_0007.legacy_construct_fp_from_syscall PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_construct_fp_from_syscall SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_construct_fp_from_syscall PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_construct_fp_from_syscall PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_construct_fp_from_syscall PRIVATE
    test/test_fast_io/0007.legacy/construct_fp_from_syscall.cc
)

# target
add_executable(test_fast_io_0007.legacy_construct_fstream_from_syscall "")
set_target_properties(test_fast_io_0007.legacy_construct_fstream_from_syscall PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_construct_fstream_from_syscall")
set_target_properties(test_fast_io_0007.legacy_construct_fstream_from_syscall PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_construct_fstream_from_syscall SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_construct_fstream_from_syscall PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_construct_fstream_from_syscall PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_construct_fstream_from_syscall PRIVATE
    test/test_fast_io/0007.legacy/construct_fstream_from_syscall.cc
)

# target
add_executable(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n "")
set_target_properties(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n")
set_target_properties(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_construct_fstream_from_syscall_l10n PRIVATE
    test/test_fast_io/0007.legacy/construct_fstream_from_syscall_l10n.cc
)

# target
add_executable(test_fast_io_0007.legacy_filebuf_file "")
set_target_properties(test_fast_io_0007.legacy_filebuf_file PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_filebuf_file")
set_target_properties(test_fast_io_0007.legacy_filebuf_file PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_filebuf_file PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_filebuf_file SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_filebuf_file PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_filebuf_file PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_filebuf_file PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_filebuf_file PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_filebuf_file PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_filebuf_file PRIVATE
    test/test_fast_io/0007.legacy/filebuf_file.cc
)

# target
add_executable(test_fast_io_0007.legacy_filebuf_file_ostream "")
set_target_properties(test_fast_io_0007.legacy_filebuf_file_ostream PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_filebuf_file_ostream")
set_target_properties(test_fast_io_0007.legacy_filebuf_file_ostream PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_filebuf_file_ostream SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_filebuf_file_ostream PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_filebuf_file_ostream PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_filebuf_file_ostream PRIVATE
    test/test_fast_io/0007.legacy/filebuf_file_ostream.cc
)

# target
add_executable(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout "")
set_target_properties(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PROPERTIES OUTPUT_NAME "test_fast_io_0007.legacy_get_file_descriptor_from_std_cout")
set_target_properties(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE
    include
)
target_include_directories(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0007.legacy_get_file_descriptor_from_std_cout PRIVATE
    test/test_fast_io/0007.legacy/get_file_descriptor_from_std_cout.cc
)

# target
add_executable(test_fast_io_0010.status_status "")
set_target_properties(test_fast_io_0010.status_status PROPERTIES OUTPUT_NAME "test_fast_io_0010.status_status")
set_target_properties(test_fast_io_0010.status_status PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0010.status_status PRIVATE
    include
)
target_include_directories(test_fast_io_0010.status_status SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0010.status_status PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0010.status_status PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0010.status_status PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0010.status_status PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0010.status_status PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0010.status_status PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0010.status_status PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0010.status_status PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0010.status_status PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0010.status_status PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0010.status_status PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0010.status_status PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0010.status_status PRIVATE
    test/test_fast_io/0010.status/status.cc
)

# target
add_executable(test_fast_io_0012.transmit_transmit "")
set_target_properties(test_fast_io_0012.transmit_transmit PROPERTIES OUTPUT_NAME "test_fast_io_0012.transmit_transmit")
set_target_properties(test_fast_io_0012.transmit_transmit PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0012.transmit_transmit PRIVATE
    include
)
target_include_directories(test_fast_io_0012.transmit_transmit SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0012.transmit_transmit PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0012.transmit_transmit PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0012.transmit_transmit PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0012.transmit_transmit PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0012.transmit_transmit PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0012.transmit_transmit PRIVATE
    test/test_fast_io/0012.transmit/transmit.cc
)

# target
add_executable(test_fast_io_0014.random_generate_error_domain "")
set_target_properties(test_fast_io_0014.random_generate_error_domain PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_generate_error_domain")
set_target_properties(test_fast_io_0014.random_generate_error_domain PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_generate_error_domain PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_generate_error_domain SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_generate_error_domain PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_generate_error_domain PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_generate_error_domain PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_generate_error_domain PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_generate_error_domain PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_generate_error_domain PRIVATE
    test/test_fast_io/0014.random/generate_error_domain.cc
)

# target
add_executable(test_fast_io_0014.random_kana "")
set_target_properties(test_fast_io_0014.random_kana PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_kana")
set_target_properties(test_fast_io_0014.random_kana PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_kana PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_kana SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_kana PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_kana PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_kana PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_kana PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_kana PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_kana PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_kana PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_kana PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_kana PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_kana PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_kana PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_kana PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_kana PRIVATE
    test/test_fast_io/0014.random/kana.cc
)

# target
add_executable(test_fast_io_0014.random_name "")
set_target_properties(test_fast_io_0014.random_name PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_name")
set_target_properties(test_fast_io_0014.random_name PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_name PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_name SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_name PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_name PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_name PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_name PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_name PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_name PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_name PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_name PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_name PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_name PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_name PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_name PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_name PRIVATE
    test/test_fast_io/0014.random/name.cc
)

# target
add_executable(test_fast_io_0014.random_password "")
set_target_properties(test_fast_io_0014.random_password PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_password")
set_target_properties(test_fast_io_0014.random_password PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_password PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_password SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_password PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_password PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_password PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_password PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_password PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_password PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_password PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_password PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_password PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_password PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_password PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_password PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_password PRIVATE
    test/test_fast_io/0014.random/password.cc
)

# target
add_executable(test_fast_io_0014.random_pin "")
set_target_properties(test_fast_io_0014.random_pin PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_pin")
set_target_properties(test_fast_io_0014.random_pin PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_pin PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_pin SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_pin PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_pin PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_pin PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_pin PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_pin PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_pin PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_pin PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_pin PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_pin PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_pin PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_pin PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_pin PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_pin PRIVATE
    test/test_fast_io/0014.random/pin.cc
)

# target
add_executable(test_fast_io_0014.random_sexratio "")
set_target_properties(test_fast_io_0014.random_sexratio PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_sexratio")
set_target_properties(test_fast_io_0014.random_sexratio PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_sexratio PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_sexratio SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_sexratio PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_sexratio PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_sexratio PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_sexratio PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_sexratio PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_sexratio PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_sexratio PRIVATE
    test/test_fast_io/0014.random/sexratio.cc
)

# target
add_executable(test_fast_io_0014.random_sexratio_with_artificial_womb "")
set_target_properties(test_fast_io_0014.random_sexratio_with_artificial_womb PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_sexratio_with_artificial_womb")
set_target_properties(test_fast_io_0014.random_sexratio_with_artificial_womb PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_sexratio_with_artificial_womb SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_sexratio_with_artificial_womb PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_sexratio_with_artificial_womb PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_sexratio_with_artificial_womb PRIVATE
    test/test_fast_io/0014.random/sexratio_with_artificial_womb.cc
)

# target
add_executable(test_fast_io_0014.random_stop_born_child_until_boy "")
set_target_properties(test_fast_io_0014.random_stop_born_child_until_boy PROPERTIES OUTPUT_NAME "test_fast_io_0014.random_stop_born_child_until_boy")
set_target_properties(test_fast_io_0014.random_stop_born_child_until_boy PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE
    include
)
target_include_directories(test_fast_io_0014.random_stop_born_child_until_boy SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0014.random_stop_born_child_until_boy PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0014.random_stop_born_child_until_boy PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0014.random_stop_born_child_until_boy PRIVATE
    test/test_fast_io/0014.random/stop_born_child_until_boy.cc
)

# target
add_executable(test_fast_io_0015.match_ipv4 "")
set_target_properties(test_fast_io_0015.match_ipv4 PROPERTIES OUTPUT_NAME "test_fast_io_0015.match_ipv4")
set_target_properties(test_fast_io_0015.match_ipv4 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0015.match_ipv4 PRIVATE
    include
)
target_include_directories(test_fast_io_0015.match_ipv4 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0015.match_ipv4 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0015.match_ipv4 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0015.match_ipv4 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0015.match_ipv4 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0015.match_ipv4 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0015.match_ipv4 PRIVATE
    test/test_fast_io/0015.match/ipv4.cc
)

# target
add_executable(test_fast_io_0016.dll_win32 "")
set_target_properties(test_fast_io_0016.dll_win32 PROPERTIES OUTPUT_NAME "test_fast_io_0016.dll_win32")
set_target_properties(test_fast_io_0016.dll_win32 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0016.dll_win32 PRIVATE
    include
)
target_include_directories(test_fast_io_0016.dll_win32 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0016.dll_win32 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0016.dll_win32 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0016.dll_win32 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0016.dll_win32 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0016.dll_win32 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0016.dll_win32 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0016.dll_win32 PRIVATE
    test/test_fast_io/0016.dll/win32.cc
)

# target
add_executable(test_fast_io_0017.network_dns "")
set_target_properties(test_fast_io_0017.network_dns PROPERTIES OUTPUT_NAME "test_fast_io_0017.network_dns")
set_target_properties(test_fast_io_0017.network_dns PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0017.network_dns PRIVATE
    include
)
target_include_directories(test_fast_io_0017.network_dns SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0017.network_dns PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0017.network_dns PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_dns PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0017.network_dns PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0017.network_dns PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0017.network_dns PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0017.network_dns PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_dns PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0017.network_dns PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0017.network_dns PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0017.network_dns PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0017.network_dns PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0017.network_dns PRIVATE
    test/test_fast_io/0017.network/dns.cc
)

# target
add_executable(test_fast_io_0017.network_http "")
set_target_properties(test_fast_io_0017.network_http PROPERTIES OUTPUT_NAME "test_fast_io_0017.network_http")
set_target_properties(test_fast_io_0017.network_http PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0017.network_http PRIVATE
    include
)
target_include_directories(test_fast_io_0017.network_http SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0017.network_http PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0017.network_http PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_http PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0017.network_http PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0017.network_http PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0017.network_http PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0017.network_http PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_http PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0017.network_http PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0017.network_http PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0017.network_http PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0017.network_http PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0017.network_http PRIVATE
    test/test_fast_io/0017.network/http.cc
)

# target
add_executable(test_fast_io_0017.network_raw "")
set_target_properties(test_fast_io_0017.network_raw PROPERTIES OUTPUT_NAME "test_fast_io_0017.network_raw")
set_target_properties(test_fast_io_0017.network_raw PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0017.network_raw PRIVATE
    include
)
target_include_directories(test_fast_io_0017.network_raw SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0017.network_raw PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0017.network_raw PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_raw PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0017.network_raw PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0017.network_raw PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0017.network_raw PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0017.network_raw PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_raw PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0017.network_raw PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0017.network_raw PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0017.network_raw PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0017.network_raw PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0017.network_raw PRIVATE
    test/test_fast_io/0017.network/raw.cc
)

# target
add_executable(test_fast_io_0017.network_tcp_client "")
set_target_properties(test_fast_io_0017.network_tcp_client PROPERTIES OUTPUT_NAME "test_fast_io_0017.network_tcp_client")
set_target_properties(test_fast_io_0017.network_tcp_client PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0017.network_tcp_client PRIVATE
    include
)
target_include_directories(test_fast_io_0017.network_tcp_client SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0017.network_tcp_client PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0017.network_tcp_client PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0017.network_tcp_client PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0017.network_tcp_client PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0017.network_tcp_client PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0017.network_tcp_client PRIVATE
    test/test_fast_io/0017.network/tcp_client.cc
)

# target
add_executable(test_fast_io_0017.network_tcp_server "")
set_target_properties(test_fast_io_0017.network_tcp_server PROPERTIES OUTPUT_NAME "test_fast_io_0017.network_tcp_server")
set_target_properties(test_fast_io_0017.network_tcp_server PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0017.network_tcp_server PRIVATE
    include
)
target_include_directories(test_fast_io_0017.network_tcp_server SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0017.network_tcp_server PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0017.network_tcp_server PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0017.network_tcp_server PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0017.network_tcp_server PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0017.network_tcp_server PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0017.network_tcp_server PRIVATE
    test/test_fast_io/0017.network/tcp_server.cc
)

# target
add_executable(test_fast_io_0022.complex_complex "")
set_target_properties(test_fast_io_0022.complex_complex PROPERTIES OUTPUT_NAME "test_fast_io_0022.complex_complex")
set_target_properties(test_fast_io_0022.complex_complex PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0022.complex_complex PRIVATE
    include
)
target_include_directories(test_fast_io_0022.complex_complex SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0022.complex_complex PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0022.complex_complex PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0022.complex_complex PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0022.complex_complex PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0022.complex_complex PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0022.complex_complex PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0022.complex_complex PRIVATE
    test/test_fast_io/0022.complex/complex.cc
)

# target
add_executable(test_fast_io_0025.winrt_hstring "")
set_target_properties(test_fast_io_0025.winrt_hstring PROPERTIES OUTPUT_NAME "test_fast_io_0025.winrt_hstring")
set_target_properties(test_fast_io_0025.winrt_hstring PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0025.winrt_hstring PRIVATE
    include
)
target_include_directories(test_fast_io_0025.winrt_hstring SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0025.winrt_hstring PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0025.winrt_hstring PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0025.winrt_hstring PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0025.winrt_hstring PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0025.winrt_hstring PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0025.winrt_hstring PRIVATE
    test/test_fast_io/0025.winrt/hstring.cc
)

# target
add_executable(test_fast_io_0025.winrt_hstring_get "")
set_target_properties(test_fast_io_0025.winrt_hstring_get PROPERTIES OUTPUT_NAME "test_fast_io_0025.winrt_hstring_get")
set_target_properties(test_fast_io_0025.winrt_hstring_get PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0025.winrt_hstring_get PRIVATE
    include
)
target_include_directories(test_fast_io_0025.winrt_hstring_get SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0025.winrt_hstring_get PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0025.winrt_hstring_get PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0025.winrt_hstring_get PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0025.winrt_hstring_get PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0025.winrt_hstring_get PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0025.winrt_hstring_get PRIVATE
    test/test_fast_io/0025.winrt/hstring_get.cc
)

# target
add_executable(test_fast_io_0026.lua_hello_fast_io "")
set_target_properties(test_fast_io_0026.lua_hello_fast_io PROPERTIES OUTPUT_NAME "test_fast_io_0026.lua_hello_fast_io")
set_target_properties(test_fast_io_0026.lua_hello_fast_io PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0026.lua_hello_fast_io PRIVATE
    include
)
target_include_directories(test_fast_io_0026.lua_hello_fast_io SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0026.lua_hello_fast_io PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0026.lua_hello_fast_io PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0026.lua_hello_fast_io PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0026.lua_hello_fast_io PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0026.lua_hello_fast_io PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0026.lua_hello_fast_io PRIVATE
    test/test_fast_io/0026.lua/hello_fast_io.cc
)

# target
add_executable(test_fast_io_0027.filelock_buffer_lock "")
set_target_properties(test_fast_io_0027.filelock_buffer_lock PROPERTIES OUTPUT_NAME "test_fast_io_0027.filelock_buffer_lock")
set_target_properties(test_fast_io_0027.filelock_buffer_lock PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0027.filelock_buffer_lock PRIVATE
    include
)
target_include_directories(test_fast_io_0027.filelock_buffer_lock SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0027.filelock_buffer_lock PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0027.filelock_buffer_lock PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0027.filelock_buffer_lock PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0027.filelock_buffer_lock PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0027.filelock_buffer_lock PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0027.filelock_buffer_lock PRIVATE
    test/test_fast_io/0027.filelock/buffer_lock.cc
)

# target
add_executable(test_fast_io_0027.filelock_buffered_file_with_file_lock "")
set_target_properties(test_fast_io_0027.filelock_buffered_file_with_file_lock PROPERTIES OUTPUT_NAME "test_fast_io_0027.filelock_buffered_file_with_file_lock")
set_target_properties(test_fast_io_0027.filelock_buffered_file_with_file_lock PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE
    include
)
target_include_directories(test_fast_io_0027.filelock_buffered_file_with_file_lock SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0027.filelock_buffered_file_with_file_lock PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0027.filelock_buffered_file_with_file_lock PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0027.filelock_buffered_file_with_file_lock PRIVATE
    test/test_fast_io/0027.filelock/buffered_file_with_file_lock.cc
)

# target
add_executable(test_fast_io_0027.filelock_filelock "")
set_target_properties(test_fast_io_0027.filelock_filelock PROPERTIES OUTPUT_NAME "test_fast_io_0027.filelock_filelock")
set_target_properties(test_fast_io_0027.filelock_filelock PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0027.filelock_filelock PRIVATE
    include
)
target_include_directories(test_fast_io_0027.filelock_filelock SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0027.filelock_filelock PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0027.filelock_filelock PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0027.filelock_filelock PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0027.filelock_filelock PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0027.filelock_filelock PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0027.filelock_filelock PRIVATE
    test/test_fast_io/0027.filelock/filelock.cc
)

# target
add_executable(test_fast_io_0027.filelock_filelock_request "")
set_target_properties(test_fast_io_0027.filelock_filelock_request PROPERTIES OUTPUT_NAME "test_fast_io_0027.filelock_filelock_request")
set_target_properties(test_fast_io_0027.filelock_filelock_request PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0027.filelock_filelock_request PRIVATE
    include
)
target_include_directories(test_fast_io_0027.filelock_filelock_request SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0027.filelock_filelock_request PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0027.filelock_filelock_request PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0027.filelock_filelock_request PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0027.filelock_filelock_request PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0027.filelock_filelock_request PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0027.filelock_filelock_request PRIVATE
    test/test_fast_io/0027.filelock/filelock_request.cc
)

# target
add_executable(test_fast_io_0029.containers_vector "")
set_target_properties(test_fast_io_0029.containers_vector PROPERTIES OUTPUT_NAME "test_fast_io_0029.containers_vector")
set_target_properties(test_fast_io_0029.containers_vector PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0029.containers_vector PRIVATE
    include
)
target_include_directories(test_fast_io_0029.containers_vector SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0029.containers_vector PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0029.containers_vector PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0029.containers_vector PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0029.containers_vector PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0029.containers_vector PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0029.containers_vector PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0029.containers_vector PRIVATE
    test/test_fast_io/0029.containers/vector.cc
)

# target
add_executable(test_fast_io_0029.containers_vectorvector "")
set_target_properties(test_fast_io_0029.containers_vectorvector PROPERTIES OUTPUT_NAME "test_fast_io_0029.containers_vectorvector")
set_target_properties(test_fast_io_0029.containers_vectorvector PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0029.containers_vectorvector PRIVATE
    include
)
target_include_directories(test_fast_io_0029.containers_vectorvector SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0029.containers_vectorvector PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0029.containers_vectorvector PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0029.containers_vectorvector PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0029.containers_vectorvector PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0029.containers_vectorvector PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0029.containers_vectorvector PRIVATE
    test/test_fast_io/0029.containers/vectorvector.cc
)

# target
add_executable(test_fast_io_0030.binary_serialization_leb128 "")
set_target_properties(test_fast_io_0030.binary_serialization_leb128 PROPERTIES OUTPUT_NAME "test_fast_io_0030.binary_serialization_leb128")
set_target_properties(test_fast_io_0030.binary_serialization_leb128 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0030.binary_serialization_leb128 PRIVATE
    include
)
target_include_directories(test_fast_io_0030.binary_serialization_leb128 SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0030.binary_serialization_leb128 PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0030.binary_serialization_leb128 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0030.binary_serialization_leb128 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_leb128 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0030.binary_serialization_leb128 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0030.binary_serialization_leb128 PRIVATE
    test/test_fast_io/0030.binary_serialization/leb128.cc
)

# target
add_executable(test_fast_io_0030.binary_serialization_leb128_input "")
set_target_properties(test_fast_io_0030.binary_serialization_leb128_input PROPERTIES OUTPUT_NAME "test_fast_io_0030.binary_serialization_leb128_input")
set_target_properties(test_fast_io_0030.binary_serialization_leb128_input PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0030.binary_serialization_leb128_input PRIVATE
    include
)
target_include_directories(test_fast_io_0030.binary_serialization_leb128_input SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0030.binary_serialization_leb128_input PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0030.binary_serialization_leb128_input PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0030.binary_serialization_leb128_input PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_leb128_input PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0030.binary_serialization_leb128_input PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0030.binary_serialization_leb128_input PRIVATE
    test/test_fast_io/0030.binary_serialization/leb128_input.cc
)

# target
add_executable(test_fast_io_0030.binary_serialization_lec559_lebe "")
set_target_properties(test_fast_io_0030.binary_serialization_lec559_lebe PROPERTIES OUTPUT_NAME "test_fast_io_0030.binary_serialization_lec559_lebe")
set_target_properties(test_fast_io_0030.binary_serialization_lec559_lebe PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE
    include
)
target_include_directories(test_fast_io_0030.binary_serialization_lec559_lebe SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0030.binary_serialization_lec559_lebe PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0030.binary_serialization_lec559_lebe PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0030.binary_serialization_lec559_lebe PRIVATE
    test/test_fast_io/0030.binary_serialization/lec559_lebe.cc
)

# target
add_executable(test_fast_io_0030.binary_serialization_wasm "")
set_target_properties(test_fast_io_0030.binary_serialization_wasm PROPERTIES OUTPUT_NAME "test_fast_io_0030.binary_serialization_wasm")
set_target_properties(test_fast_io_0030.binary_serialization_wasm PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0030.binary_serialization_wasm PRIVATE
    include
)
target_include_directories(test_fast_io_0030.binary_serialization_wasm SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0030.binary_serialization_wasm PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0030.binary_serialization_wasm PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0030.binary_serialization_wasm PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0030.binary_serialization_wasm PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0030.binary_serialization_wasm PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0030.binary_serialization_wasm PRIVATE
    test/test_fast_io/0030.binary_serialization/wasm.cc
)

# target
add_executable(test_fast_io_0031.concat_concat "")
set_target_properties(test_fast_io_0031.concat_concat PROPERTIES OUTPUT_NAME "test_fast_io_0031.concat_concat")
set_target_properties(test_fast_io_0031.concat_concat PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0031.concat_concat PRIVATE
    include
)
target_include_directories(test_fast_io_0031.concat_concat SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0031.concat_concat PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0031.concat_concat PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0031.concat_concat PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0031.concat_concat PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0031.concat_concat PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0031.concat_concat PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0031.concat_concat PRIVATE
    test/test_fast_io/0031.concat/concat.cc
)

# target
add_executable(test_fast_io_0031.concat_concat_code_cvt "")
set_target_properties(test_fast_io_0031.concat_concat_code_cvt PROPERTIES OUTPUT_NAME "test_fast_io_0031.concat_concat_code_cvt")
set_target_properties(test_fast_io_0031.concat_concat_code_cvt PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0031.concat_concat_code_cvt PRIVATE
    include
)
target_include_directories(test_fast_io_0031.concat_concat_code_cvt SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0031.concat_concat_code_cvt PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0031.concat_concat_code_cvt PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0031.concat_concat_code_cvt PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0031.concat_concat_code_cvt PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0031.concat_concat_code_cvt PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0031.concat_concat_code_cvt PRIVATE
    test/test_fast_io/0031.concat/concat_code_cvt.cc
)

# target
add_executable(test_fast_io_0032.parse_by_scan_parse_by_scan "")
set_target_properties(test_fast_io_0032.parse_by_scan_parse_by_scan PROPERTIES OUTPUT_NAME "test_fast_io_0032.parse_by_scan_parse_by_scan")
set_target_properties(test_fast_io_0032.parse_by_scan_parse_by_scan PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE
    include
)
target_include_directories(test_fast_io_0032.parse_by_scan_parse_by_scan SYSTEM PRIVATE
    build/.packages/f/fast_io/latest/8574311f4b544fa89a3d8c3ee79d1929/include
)
target_compile_definitions(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE -fexceptions)
endif()
set_target_properties(test_fast_io_0032.parse_by_scan_parse_by_scan PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE -Zi)
else()
    target_compile_options(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_fast_io_0032.parse_by_scan_parse_by_scan PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_fast_io_0032.parse_by_scan_parse_by_scan PRIVATE
    test/test_fast_io/0032.parse_by_scan/parse_by_scan.cc
)

# target
add_executable(test_imgui_demo001 "")
set_target_properties(test_imgui_demo001 PROPERTIES OUTPUT_NAME "test_imgui_demo001")
set_target_properties(test_imgui_demo001 PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(test_imgui_demo001 imgui ht)
target_include_directories(test_imgui_demo001 PRIVATE
    include
)
target_include_directories(test_imgui_demo001 SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glm/0.9.9+8/8335bab7c0314ab9921440de58961aac/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include/stb
)
target_compile_definitions(test_imgui_demo001 PRIVATE
    STB_IMAGE_IMPLEMENTATION
    GLFW_INCLUDE_NONE
)
target_compile_options(test_imgui_demo001 PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_imgui_demo001 PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_imgui_demo001 PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_imgui_demo001 PRIVATE -fexceptions)
endif()
set_target_properties(test_imgui_demo001 PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_imgui_demo001 PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_imgui_demo001 PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_imgui_demo001 PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_imgui_demo001 PRIVATE -Zi)
else()
    target_compile_options(test_imgui_demo001 PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_imgui_demo001 PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_imgui_demo001 PRIVATE
    opengl32
    glfw3
    glad
    assimp-vc143-mt
    minizip
    zlib
    imgui
    ht
    user32
    shell32
    gdi32
    advapi32
)
target_link_directories(test_imgui_demo001 PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/lib
    build/windows/x64/debug
)
target_sources(test_imgui_demo001 PRIVATE
    test/test_imgui/demo001.cpp
)

# target
add_executable(test_imgui_demo002LoadImage "")
set_target_properties(test_imgui_demo002LoadImage PROPERTIES OUTPUT_NAME "test_imgui_demo002LoadImage")
set_target_properties(test_imgui_demo002LoadImage PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(test_imgui_demo002LoadImage imgui ht)
target_include_directories(test_imgui_demo002LoadImage PRIVATE
    include
)
target_include_directories(test_imgui_demo002LoadImage SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glm/0.9.9+8/8335bab7c0314ab9921440de58961aac/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/s/stb/2023.01.30/87edd883faeb4b168400e7458251d335/include/stb
)
target_compile_definitions(test_imgui_demo002LoadImage PRIVATE
    STB_IMAGE_IMPLEMENTATION
    GLFW_INCLUDE_NONE
)
target_compile_options(test_imgui_demo002LoadImage PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_imgui_demo002LoadImage PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_imgui_demo002LoadImage PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_imgui_demo002LoadImage PRIVATE -fexceptions)
endif()
set_target_properties(test_imgui_demo002LoadImage PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_imgui_demo002LoadImage PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_imgui_demo002LoadImage PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_imgui_demo002LoadImage PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_imgui_demo002LoadImage PRIVATE -Zi)
else()
    target_compile_options(test_imgui_demo002LoadImage PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_imgui_demo002LoadImage PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_imgui_demo002LoadImage PRIVATE
    opengl32
    glfw3
    glad
    assimp-vc143-mt
    minizip
    zlib
    imgui
    ht
    user32
    shell32
    gdi32
    advapi32
)
target_link_directories(test_imgui_demo002LoadImage PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glfw/3.3.8/d12e591897c9472fb7d3725fa5811388/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/lib
    build/windows/x64/debug
)
target_sources(test_imgui_demo002LoadImage PRIVATE
    test/test_imgui/demo002LoadImage.cpp
)

# target
add_executable(test_libigl_main "")
set_target_properties(test_libigl_main PROPERTIES OUTPUT_NAME "test_libigl_main")
set_target_properties(test_libigl_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_libigl_main PRIVATE
    include
)
target_include_directories(test_libigl_main SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/l/libigl/v2.4.0/4d182f2e90554388b7fe67b0648e03a6/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/e/eigen/3.4.0/1af8f25c61b04e19afd2699bba8d04c0/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/e/eigen/3.4.0/1af8f25c61b04e19afd2699bba8d04c0/include/eigen3
)
target_compile_definitions(test_libigl_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_libigl_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_libigl_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_libigl_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_libigl_main PRIVATE -fexceptions)
endif()
set_target_properties(test_libigl_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_libigl_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_libigl_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_libigl_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_libigl_main PRIVATE -Zi)
else()
    target_compile_options(test_libigl_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_libigl_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_libigl_main PRIVATE
    comdlg32
)
target_sources(test_libigl_main PRIVATE
    test/test_libigl/main.cpp
)

# target
add_executable(test_magic_enum_main "")
set_target_properties(test_magic_enum_main PROPERTIES OUTPUT_NAME "test_magic_enum_main")
set_target_properties(test_magic_enum_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_magic_enum_main PRIVATE
    include
)
target_include_directories(test_magic_enum_main SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/gtest/v1.14.0/7839ba1c2ad1460ea9b19d2bdea7455c/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/f/fmt/10.1.1/adc308aa1dfc472ab92a30abb14e2d6f/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/t/tinyxml2/9.0.0/6e5990adaef14e78b50bd851e5150c99/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/y/yaml-cpp/0.8.0/38540a2f2b544fc3892351ea4a85a969/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/r/rapidjson/2022.7.20/4c053b9ea2ac4800b84b192121041015/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/j/jsoncpp/1.9.5/e6618a0d6df14abea03ff7386675b09a/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/p/protobuf-cpp/3.19.4/d949e9189ff94f2f8e4ad7b01f0219e4/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/e/easyloggingpp/v9.97.0/4085edf0c1d44ae49a0663331fa45bdf/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/gflags/v2.2.2/b36004dce5104eca99c6a5451320400d/include
)
target_compile_definitions(test_magic_enum_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
    YAML_CPP_STATIC_DEFINE
)
target_compile_options(test_magic_enum_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_magic_enum_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_magic_enum_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_magic_enum_main PRIVATE -fexceptions)
endif()
set_target_properties(test_magic_enum_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_magic_enum_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_magic_enum_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_magic_enum_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_magic_enum_main PRIVATE -Zi)
else()
    target_compile_options(test_magic_enum_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_magic_enum_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_magic_enum_main PRIVATE
    gmock
    gtest
    fmt
    tinyxml2
    yaml-cpp
    jsoncpp
    libprotobuf
    easyloggingpp
    gflags_static
    shlwapi
)
target_link_directories(test_magic_enum_main PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/gtest/v1.14.0/7839ba1c2ad1460ea9b19d2bdea7455c/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/f/fmt/10.1.1/adc308aa1dfc472ab92a30abb14e2d6f/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/t/tinyxml2/9.0.0/6e5990adaef14e78b50bd851e5150c99/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/y/yaml-cpp/0.8.0/38540a2f2b544fc3892351ea4a85a969/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/j/jsoncpp/1.9.5/e6618a0d6df14abea03ff7386675b09a/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/p/protobuf-cpp/3.19.4/d949e9189ff94f2f8e4ad7b01f0219e4/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/e/easyloggingpp/v9.97.0/4085edf0c1d44ae49a0663331fa45bdf/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/gflags/v2.2.2/b36004dce5104eca99c6a5451320400d/lib
)
target_sources(test_magic_enum_main PRIVATE
    test/test_magic_enum/main.cpp
)

# target
add_executable(test_matplotplusplus_main "")
set_target_properties(test_matplotplusplus_main PROPERTIES OUTPUT_NAME "test_matplotplusplus_main")
set_target_properties(test_matplotplusplus_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_matplotplusplus_main PRIVATE
    include
)
target_include_directories(test_matplotplusplus_main SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/matplotplusplus/v1.2.0/87a876763903423186c3ec326a7db604/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/n/nodesoup/2020.09.05/912587fa97144b30a972f62319bd14bc/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/include
)
target_compile_definitions(test_matplotplusplus_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_matplotplusplus_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_matplotplusplus_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_matplotplusplus_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_matplotplusplus_main PRIVATE -fexceptions)
endif()
set_target_properties(test_matplotplusplus_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_matplotplusplus_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_matplotplusplus_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_matplotplusplus_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_matplotplusplus_main PRIVATE -Zi)
else()
    target_compile_options(test_matplotplusplus_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_matplotplusplus_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_matplotplusplus_main PRIVATE
    matplot
    nodesoup
    zlib
    user32
    shell32
    gdi32
)
target_link_directories(test_matplotplusplus_main PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/matplotplusplus/v1.2.0/87a876763903423186c3ec326a7db604/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/n/nodesoup/2020.09.05/912587fa97144b30a972f62319bd14bc/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/lib
)
target_sources(test_matplotplusplus_main PRIVATE
    test/test_matplotplusplus/main.cpp
)

# target
add_executable(test_others_main "")
set_target_properties(test_others_main PROPERTIES OUTPUT_NAME "test_others_main")
set_target_properties(test_others_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
add_dependencies(test_others_main ht)
target_include_directories(test_others_main PRIVATE
    include
)
target_compile_definitions(test_others_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_others_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_others_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_others_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_others_main PRIVATE -fexceptions)
endif()
set_target_properties(test_others_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_others_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_others_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_others_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_others_main PRIVATE -Zi)
else()
    target_compile_options(test_others_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_others_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test_others_main PRIVATE
    ht
    glad
    assimp-vc143-mt
    minizip
    zlib
    advapi32
)
target_link_directories(test_others_main PRIVATE
    build/windows/x64/debug
    C:/Users/yaojie/AppData/Local/.xmake/packages/g/glad/v0.1.36/d58ee23747ff411aae74b40986460499/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/a/assimp/v5.3.1/f2df4573f8a641448aebe7b35fce6faa/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/m/minizip/v1.2.13/b00b0a3e163346cd9a0be9a3dece6165/lib
    C:/Users/yaojie/AppData/Local/.xmake/packages/z/zlib/v1.3/bccfcefde78c424c9153cc8d3007dd63/lib
)
target_sources(test_others_main PRIVATE
    test/test_others/main.cpp
)

# target
add_executable(test_test_eigen_main "")
set_target_properties(test_test_eigen_main PROPERTIES OUTPUT_NAME "test_test_eigen_main")
set_target_properties(test_test_eigen_main PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_include_directories(test_test_eigen_main PRIVATE
    include
)
target_include_directories(test_test_eigen_main SYSTEM PRIVATE
    C:/Users/yaojie/AppData/Local/.xmake/packages/e/eigen/3.4.0/1af8f25c61b04e19afd2699bba8d04c0/include
    C:/Users/yaojie/AppData/Local/.xmake/packages/e/eigen/3.4.0/1af8f25c61b04e19afd2699bba8d04c0/include/eigen3
)
target_compile_definitions(test_test_eigen_main PRIVATE
    STB_IMAGE_IMPLEMENTATION
)
target_compile_options(test_test_eigen_main PRIVATE
    $<$<COMPILE_LANGUAGE:C>:/utf-8>
    $<$<COMPILE_LANGUAGE:CXX>:/utf-8>
)
if(MSVC)
    target_compile_options(test_test_eigen_main PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(test_test_eigen_main PRIVATE -fcxx-exceptions)
else()
    target_compile_options(test_test_eigen_main PRIVATE -fexceptions)
endif()
set_target_properties(test_test_eigen_main PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test_test_eigen_main PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test_test_eigen_main PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(test_test_eigen_main PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(test_test_eigen_main PRIVATE -Zi)
else()
    target_compile_options(test_test_eigen_main PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET test_test_eigen_main PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(test_test_eigen_main PRIVATE
    test/test_eigen/main.cpp
)

